{"version":3,"sources":["components/navBar/index.jsx","layouts/main.jsx","components/card/index.jsx","pages/Home/index.jsx","pages/Populares/index.jsx","pages/DetailMovie/index.jsx","pages/SearchMovie/index.jsx","pages/Errors/404.jsx","index.jsx"],"names":["useState","search","setSearch","loadPage","setLoadPage","location","useLocation","history","useHistory","useEffect","length","push","queryString","parse","query","className","style","boxShadow","to","exact","activeClassName","type","fontSize","height","onChange","target","value","placeholder","children","Fragment","minHeight","marginTop","movie","poster_path","minWidth","margin","border","borderRadius","overflow","padding","src","width","getTopRatenMovie","a","api_key","language","page","axios","get","urlData","params","status","statusText","data","topRatenMovie","setTopRatenMovie","setPage","then","dataTopRatenMovie","results","concat","document","body","onscroll","window","scrollY","scrollMaxY","map","popularMovie","index","id","key","getPopularMovies","popularMovies","setPopularMovies","dataPopularMovies","getDetailMovie","movieID","match","detailMovie","setDetailMovie","dataDetailMovie","console","log","title","overview","genders","genres","name","searchMovies","movies","setMovies","lastLocation","setLastLocation","dataMovies","position","top","left","transform","ScrollToTop","pathname","scrollTo","ReactDOM","render","path","component","Home","Populares","SearchMovie","DetailMovie","Error404","getElementById"],"mappings":"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","file":"static/js/main.7d755b8c.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link, NavLink } from \"react-router-dom\"\nimport \"./index.css\"\nimport queryString from 'query-string'\nimport { useState, useEffect } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default ()=>{\n    const\n        [ search, setSearch ] = useState(\"\"),\n        [ loadPage, setLoadPage ] = useState(false),\n        location = useLocation(),\n        history = useHistory()\n\n\n    useEffect(()=>{\n        if(search.length){\n            history.push(\"/movies/search?query=\" + search)\n        }else{\n            if(!loadPage){\n                const { query = \"\" } = queryString.parse(location.search)\n                if(query.length) setSearch(query)\n                setLoadPage(true)\n            }\n        }\n    }, [ search ])\n\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\" style={{ boxShadow: \"0 2px 12px #000\"}}>\n            <Link className=\"navbar-brand text-light\" to=\"/\">Cinema</Link>\n\n            <div className=\"collapse navbar-collapse\">\n\n                <ul className=\"navbar-nav mr-auto\">\n                    <li>\n                        <NavLink exact className=\"nav-link text-light\" to=\"/\" activeClassName=\"active\">Home</NavLink>\n                    </li>\n\n                    <li>\n                        <NavLink exact className=\"nav-link text-light\" to=\"/populares\" activeClassName=\"active\">Populares</NavLink>\n                    </li>\n\n                </ul>\n\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input \n                        type=\"search\" \n                        className=\"form-control mr-sm-2\" \n                        style={{ fontSize:   \"15px\", height: \"35px\" }}\n                        onChange={ ({ target })=> setSearch(target.value)}\n                        value={search}\n                        placeholder=\"Buscar\"\n                    />\n                </form>\n\n            </div>\n        </nav>\n    )\n}","import React from \"react\"\nimport NavBar from \"../components/navBar\"\n\nexport default ({ children })=> (\n    <React.Fragment>\n        <NavBar></NavBar>\n        <main className=\"container-fluid bg-dark\" style={{ minHeight: \"100vh\", marginTop: 40 }}>\n            <div className=\"row\">\n                <div className=\"col-10 m-auto py-5 d-flex flex-row flex-wrap\">\n                    { children }\n                </div>\n            </div>\n        </main>\n    </React.Fragment>\n)","import React, { useState } from \"react\"\nconst urlImages = \"https://image.tmdb.org/t/p/w300/\"\n\nexport default ({ movie })=>{\n    const [ showDescription, toggleShowDescription ] = useState(false)\n\n    const limitWrap = !showDescription?{\n        height: \"4.5em\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n    }:{}\n    // alert(movie.poster_path)\n    if(movie.poster_path == null) return null;\n    return(\n        <div \n            className=\"card\" \n            style={{ minWidth: 300, margin: \".3rem\", border: 0, borderRadius: 8, overflow: \"hidden\" }}\n        >\n            <div className=\"card-body\" style={{ padding: 0 }}>\n                <img src={ urlImages + movie.poster_path } width=\"100%\" height=\"100%\"/>\n\n                {/* <h5 className=\"card-title\">{ movie.title }</h5> */}\n\n                {/* <div className=\"content-description\">\n                    <p className=\"card-text\" style={limitWrap}>{ movie.overview }</p>\n                    <a  onClick={ ()=> toggleShowDescription(!showDescription) }>\n                        { !showDescription?\"Mas\":\"Menos\" }\n                    </a>\n                    <a href=\"/\" className=\"btn btn-primary\">Ver pelicula</a>\n                </div> */}\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Card from \"../../components/card\"\nimport \"./index.css\"\nimport axios from \"axios\"\nimport { Redirect, Link } from 'react-router-dom';\n\n\n\nconst getTopRatenMovie = async ({ api_key, language, page })=>{\n    const urlData = \"https://api.themoviedb.org/3\",\n          { status, statusText, data } = await  axios.get(urlData + \"/movie/top_rated\",  { \n              params: { api_key, language,  page }\n          })\n\n    if(status === 200 && statusText === \"OK\")\n        return data\n}\n\nexport default  ()=> {\n    const \n        [ topRatenMovie, setTopRatenMovie ] = useState([]),  \n        api_key = \"9dffe1ad75dbf83ed2d555cbc14d7a57\",\n        [ language, setLanguage ] = useState(\"es\"),\n        [ page, setPage ] = useState(1)\n\n    useEffect(()=>{\n        getTopRatenMovie({ api_key, language, page }).then(dataTopRatenMovie => {\n            // console.log(\"data: \", dataTopRatenMovie)\n            if(!topRatenMovie.length) \n                return setTopRatenMovie(dataTopRatenMovie.results)\n\n            setTopRatenMovie(\n                topRatenMovie.concat(dataTopRatenMovie.results)\n            )\n        })\n    }, [ page ])\n    \n    document.body.onscroll = ()=>{\n        if(window.scrollY >= window.scrollMaxY)\n            setPage(page+1)\n    }\n\n    return topRatenMovie.map( (popularMovie, index) =>(\n        <Link to={`/movies/${ popularMovie.id }`}>\n            <Card movie={ popularMovie } key={ index }></Card>\n        </Link>\n    ))\n}","import React, { useState, useEffect } from 'react';\nimport Card from \"../../components/card\"\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\"\nimport \"./index.css\"\n\n\n\nconst getPopularMovies = async ({ api_key, language, page })=>{\n    const urlData = \"https://api.themoviedb.org/3\",\n          { status, statusText, data } = await  axios.get(urlData + \"/movie/popular\",  { \n              params: { api_key, language,  page }\n          })\n\n    if(status === 200 && statusText === \"OK\")\n        return data\n}\n\nexport default  ()=> {\n    const \n        [ popularMovies, setPopularMovies ] = useState([]),  \n        api_key = \"9dffe1ad75dbf83ed2d555cbc14d7a57\",\n        [ language, setLanguage ] = useState(\"es\"),\n        [ page, setPage ] = useState(1)\n\n    useEffect(()=>{\n        getPopularMovies({ api_key, language, page }).then(dataPopularMovies => {\n            // console.log(\"data: \", dataPopularMovies)\n            if(!popularMovies.length) \n                return setPopularMovies(dataPopularMovies.results)\n\n            setPopularMovies(\n                popularMovies.concat(dataPopularMovies.results)\n            )\n        })\n    }, [ page ])\n    \n    document.body.onscroll = ()=>{\n        if(window.scrollY >= window.scrollMaxY)\n            setPage(page+1)\n    }\n\n    return popularMovies.map( (popularMovie, index) =>(\n        <Link to={`/movies/${ popularMovie.id }`}>\n            <Card movie={ popularMovie } key={ index }></Card>\n        </Link>\n    ))\n}","import React from \"react\"\nimport axios from \"axios\"\nimport { useState, useEffect } from \"react\"\nimport Card from \"../../components/card\"\nimport \"./index.css\"\n\nconst getDetailMovie = async ({ api_key, language, movieID })=>{\n    const urlData = \"https://api.themoviedb.org/3\",\n          { status, statusText, data } = await  axios.get(urlData + `/movie/${ movieID }`,  { \n              params: { api_key, language }\n          })\n\n    if(status === 200 && statusText === \"OK\")\n        return data\n}\n\n\nexport default ({ match })=> {\n    const \n        api_key = \"9dffe1ad75dbf83ed2d555cbc14d7a57\",\n        [ detailMovie, setDetailMovie ] = useState({}),\n        [ language, setLanguage ] = useState(\"es\")\n\n    useEffect(()=>{\n        getDetailMovie({ api_key, language, movieID: match.params.id }).then( dataDetailMovie => {\n            console.log(dataDetailMovie)\n            setDetailMovie(dataDetailMovie)\n        })\n    }, [])\n    \n    return(\n        <div className=\"containerMovie\">\n            <Card movie={ detailMovie } key={ detailMovie.id }></Card>\n            <div className=\"descriptionMovie\">\n                <h1 className=\"title\">{ detailMovie.title }</h1>\n                <p className=\"description\">{ detailMovie.overview }</p>\n                { genders(detailMovie.genres) }\n            </div>\n        </div>\n    )\n}\n\nconst genders = (genders)=>{\n    if(typeof genders != \"undefined\"){\n        return genders.map( ({ id, name }) => (\n            <span className=\"gender\" key={ id }>\n                { name }\n            </span>\n        ))\n    }\n}","import React, { useState, useEffect } from \"react\"\nimport Card from \"../../components/card\"\nimport queryString from 'query-string'\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\"\n\nconst searchMovies = async ({ api_key, language, page, query })=>{\n    const urlData = \"https://api.themoviedb.org/3\",\n        { status, statusText, data } = await  axios.get(urlData + \"/search/movie\",  { \n            params: { \n                api_key, language, query, page\n            }\n        })\n\n    if(status === 200 && statusText === \"OK\")\n        return data\n}\n\n\nexport default ({ location  })=> {\n    \n    const \n        [ page, setPage ] = useState(1),\n        [ movies, setMovies ] = useState([]),  \n        [ language, setLanguage ] = useState(\"es\"),\n        api_key = \"9dffe1ad75dbf83ed2d555cbc14d7a57\",\n        [ lastLocation, setLastLocation ] = useState(location)\n        \n\n        useEffect(()=>{\n            const { query = \"\" } = queryString.parse(location.search)\n\n            searchMovies({ api_key, language, page, query }).then(dataMovies => {\n\n                if(!movies.length || lastLocation.search != location.search){\n                    setLastLocation(location)\n                    return setMovies(dataMovies.results)\n                }\n    \n                setMovies(movies.concat(dataMovies.results))\n            })\n        }, [ page, location ])\n        \n        document.body.onscroll = ()=>{\n            if(window.scrollY >= window.scrollMaxY)\n                setPage(page+1)\n        }\n\n    return movies.map( (movie, index) =>(\n        <Link to={`/movies/${ movie.id }`}>\n            <Card movie={ movie } key={ index }></Card>\n        </Link>\n    ))\n}","import React from \"react\"\n\n\nexport default ()=>(\n    <div className=\"container-not-found\" style={{ position: \"absolute\", top: \"250px\", left: \"50%\", transform: \"translateX(-50%)\" }}>\n        <h1 className=\"text-light text-center\" style={{ fontSize: \"5rem\" }}>404</h1>\n        <p className=\"text-light text-center\" style={{ fontSize: \"1.3rem\" }}>Pagina no localizada.</p>\n    </div>\n)","import React, { useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport MainLayout from \"./layouts/main.jsx\"\n\nimport Home from './pages/Home';\nimport Populares from \"./pages/Populares\"\nimport DetailMovie from \"./pages/DetailMovie\"\nimport SearchMovie from \"./pages/SearchMovie\"\nimport Error404 from \"./pages/Errors/404\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css';\nimport { BrowserRouter, Switch, Route, useLocation } from \"react-router-dom\"\n\n\n\nconst ScrollToTop = ()=> {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nconst App = ()=>{\n    return (\n        <BrowserRouter>\n            <MainLayout>\n                <ScrollToTop />\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/populares\" component={Populares} />\n                    <Route exact path=\"/movies/search\" component={SearchMovie} />\n                    <Route exact path=\"/movies/:id\" component={DetailMovie} />\n                    <Route exact path=\"*\" component={Error404} />\n                </Switch>\n            </MainLayout>\n        </BrowserRouter>\n    )\n\n}\n\nReactDOM.render( App(), document.getElementById('root'));\n"],"sourceRoot":""}